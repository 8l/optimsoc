#!/bin/bash

OR32OBJDUMP=@OR32-OBJDUMP@

## Extract memory size

# Get symbols address from sysconfig
startstr=`${OR32OBJDUMP} -t optimsoc-sysconfig.o | grep _optimsoc_compute_tile_memsize | awk '{ print $1 }' | tr '[:lower:]' '[:upper:]'`

if [ -z "$startstr" ]; then
	echo "*** ERROR: Missing _optimsoc_compute_tile_memsize symbol in optimsoc-sysconfig.c"
	exit -1
fi

# Convert to decimal
start=$((0x$startstr))

# Calculate end of this 4 byte symbol
let end=$start+4

# Extract value of this symbol
memsizestr=`${OR32OBJDUMP} -s -j .rodata --start-address=$start --stop-address=$end optimsoc-sysconfig.o | awk '{ if($0 ~ "^ [0-9a-fA-f]+ [0-9a-fA-f]+") print $2; }'`

# Convert value to decimal
memsize=$((0x$memsizestr))

## Extract memory size

# Get symbols address from sysconfig
startstr=`${OR32OBJDUMP} -t optimsoc-sysconfig.o | grep _optimsoc_compute_tile_num | awk '{ print $1 }' | tr '[:lower:]' '[:upper:]'`

if [ -z "$startstr" ]; then
	echo "*** ERROR: Missing _optimsoc_compute_tile_num symbol in optimsoc-sysconfig.c"
	exit -1
fi

# Convert to decimal
start=$((0x$startstr))

# Calculate end of this 4 byte symbol
let end=$start+2

# Extract value of this symbol
ctnumstr=`${OR32OBJDUMP} -s -j .rodata --start-address=$start --stop-address=$end optimsoc-sysconfig.o | awk '{ if($0 ~ "^ [0-9a-fA-f]+ [0-9a-fA-f]+") print $2; }'`

# Convert value to decimal
ctnum=$((0x$ctnumstr))

## Replace

echo "++ Generate PGAS binary"
echo "Number of compute tiles: $ctnum"
echo "PGAS partition size per compute tile: $memsize"

optimsoc-pgas-binary ${PROGRAM}.bin $memsize $ctnum ${PROGRAM}-pgas.bin

